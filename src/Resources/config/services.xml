<?xml version="1.0" encoding="UTF-8" ?>
<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services
        https://symfony.com/schema/dic/services/services-1.0.xsd">
    <parameters>
        <parameter key="nav.proxies.cache_dir">%kernel.cache_dir%/nav/Proxies</parameter>
    </parameters>

    <services>
        <service id="nav.registry" class="NavBundle\Registry" public="true">
            <argument type="service" id="service_container"/>
            <argument/> <!-- managers -->
            <argument/> <!-- default manager name -->
            <argument>%nav.proxies.cache_dir%</argument>
            <tag name="kernel.cache_warmer"/>
        </service>
        <service id="NavBundle\Registry" alias="nav.registry" public="true"/>
        <service id="NavBundle\RegistryInterface" alias="nav.registry" public="true"/>

        <service id="nav.class_metadata.driver.annotation" class="NavBundle\ClassMetadata\Driver\AnnotationDriver" abstract="true">
            <argument type="service" id="annotations.reader"/>
        </service>

        <service id="nav.connection_resolver.abstract" class="NavBundle\Connection\ConnectionResolver" abstract="true">
            <argument/> <!-- className -->
            <argument/> <!-- WSDL -->
            <argument/> <!-- options -->
        </service>

        <service id="nav.entity_listener_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
            <tag name="container.service_locator" />
        </service>

        <service id="nav.entity_listener_resolver" class="NavBundle\EntityListener\EntityListenerResolver" public="false">
            <argument type="service" id="nav.entity_listener_locator"/>
        </service>

        <service id="nav.hydrator_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
            <tag name="container.service_locator" />
        </service>

        <service id="nav.entity_manager.abstract" class="NavBundle\EntityManager\EntityManager" abstract="true">
            <argument type="service" id="logger" on-invalid="null"/>
            <argument type="service" id="nav.event_manager"/>
            <argument type="service" id="serializer"/>
            <argument type="service" id="property_accessor"/>
            <argument type="service" id="nav.hydrator_locator"/>
            <argument/> <!-- connection resolver -->
            <argument/> <!-- mappingDriver -->
            <argument/> <!-- nameConverter -->
            <argument/> <!-- entityNamespaces -->
            <call method="setEntityRepositoryFactory">
                <argument type="service" id="nav.entity_repository_factory"/>
            </call>
        </service>

        <service id="nav.entity_repository_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
            <tag name="container.service_locator" />
        </service>

        <service id="nav.entity_repository_factory" class="NavBundle\EntityRepository\EntityRepositoryFactory" public="false">
            <argument type="service" id="nav.entity_repository_locator"/>
        </service>

        <service id="nav.event_manager" class="NavBundle\Event\EventManager" public="false">
            <argument type="service" id="nav.entity_listener_resolver"/>
        </service>

        <service id="NavBundle\Hydrator\ObjectHydrator" class="NavBundle\Hydrator\ObjectHydrator" public="false">
            <argument type="service" id="serializer"/>
            <tag name="nav.hydrator"/>
        </service>

        <service id="NavBundle\Hydrator\CountHydrator" class="NavBundle\Hydrator\CountHydrator" public="false">
            <tag name="nav.hydrator"/>
        </service>

        <service id="nav.proxy_manager.file_locator" class="ProxyManager\FileLocator\FileLocator" public="false">
            <argument>%nav.proxies.cache_dir%</argument>
        </service>

        <service id="nav.proxy_manager.generator_strategy.file_writer" class="ProxyManager\GeneratorStrategy\FileWriterGeneratorStrategy" public="false">
            <argument type="service" id="nav.proxy_manager.file_locator"/>
        </service>

        <service id="nav.proxy_manager.configuration" class="ProxyManager\Configuration" public="false">
            <call method="setGeneratorStrategy">
                <argument type="service" id="nav.proxy_manager.generator_strategy.file_writer"/>
            </call>
            <call method="setProxiesTargetDir">
                <argument>%nav.proxies.cache_dir%</argument>
            </call>
        </service>

        <service id="nav.proxy_manager.lazy_loading_value_holder_factory" class="ProxyManager\Factory\LazyLoadingValueHolderFactory" public="true">
            <argument type="service" id="nav.proxy_manager.configuration"/>
        </service>

        <service id="nav.serializer.name_converter.camel_case_to_nav" class="NavBundle\Serializer\NameConverter\CamelCaseToNavNameConverter" public="false">
            <argument type="service" id="nav.registry"/>
        </service>

        <service id="nav.serializer.decoder" class="NavBundle\Serializer\NavDecoder" public="false">
            <tag name="serializer.encoder" priority="-1"/>
        </service>

        <service id="nav.serializer.collection_denormalizer" class="NavBundle\Serializer\CollectionDenormalizer" public="false">
            <tag name="serializer.normalizer" priority="100"/>
        </service>

        <service id="nav.serializer.object_denormalizer" class="NavBundle\Serializer\ObjectDenormalizer" public="false">
            <tag name="serializer.normalizer" priority="100"/>
        </service>

        <service id="nav.serializer.entity_normalizer" class="NavBundle\Serializer\EntityNormalizer" public="false">
            <argument type="service" id="nav.registry"/>
            <argument type="service" id="nav.proxy_manager.lazy_loading_value_holder_factory"/>
            <argument type="service" id="serializer.mapping.class_metadata_factory"/>
            <argument type="service" id="nav.serializer.name_converter.camel_case_to_nav"/>
            <argument type="service" id="property_info" on-invalid="ignore"/>
            <argument type="service" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore"/>
            <tag name="serializer.normalizer" priority="-1"/>
        </service>
    </services>
</container>
