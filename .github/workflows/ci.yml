name: CI

on:
  push:
    branches:
      - main
      - '[0-9].[0-9]'
    tags:
      - '*'
  pull_request: ~
  schedule:
    # Every Sunday at 02:00
    - cron: 0 2 * * 0
  workflow_dispatch: ~

jobs:
  tests:
    name: Tests PHP ${{ matrix.php }} (Symfony ${{ matrix.symfony }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ['7.3', '7.4', '8.0', '8.1']
        symfony: ['4.4.*', '5.3.*', '5.4.*', '6.0.*']
        exclude:
          - php: '8.0'
            symfony: '4.4.*'
          - php: '8.1'
            symfony: '4.4.*'
          - php: '7.3'
            symfony: '6.0.*'
          - php: '7.4'
            symfony: '6.0.*'
        include:
          - symfony: '4.4.*'
            downgrade-laminas: true
          - php: '8.1'
            upgrade-laminas: true
            phpstan: phpstan.php8.neon.dist
          - php: '8.0'
            phpstan: phpstan.php8.neon.dist
          - php: '8.0'
            symfony: '5.4.*'
            quality: true
            bootable: true
            coverage: true
          - php: '7.4'
            phpunit-options: '--exclude-group php8'
          - symfony: '5.4.*'
            minimum-stability: beta
          - symfony: '6.0.*'
            minimum-stability: beta
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: soap
          coverage: xdebug
          tools: composer:v2, flex, phpstan, php-cs-fixer, phpunit
      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"
      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-
      - name: Configure Symfony
        run: composer config extra.symfony.require "${{ matrix.symfony }}"
      - name: Configure Composer minimum-stability
        if: matrix.minimum-stability
        run: composer config minimum-stability ${{ matrix.minimum-stability }}
      - name: Downgrade laminas/laminas-code
        if: matrix.downgrade-laminas
        run: composer require laminas/laminas-code:^3.4 --no-install --no-update
      - name: Upgrade laminas/laminas-code
        if: matrix.upgrade-laminas
        run: composer require laminas/laminas-code:^4.5-dev --no-install --no-update
      - name: Update project dependencies
        run: composer update --no-progress --ansi --prefer-stable
      - name: Bundle is bootable
        if: ${{ matrix.bootable && github.event_name == 'push' }}
        env:
          SKELETON_VERSION: ${{matrix.symfony}}
        run: |
          composer create-project "symfony/skeleton:${SKELETON_VERSION}" skeleton
          cd skeleton
          composer config extra.symfony.allow-contrib true
          composer req vincentchalamon/nav-bundle:dev-${GITHUB_REF#refs/heads/}
      - name: Run php-cs-fixer tests
        if: matrix.quality
        run: php-cs-fixer fix --diff --dry-run --ansi --verbose
      - name: Run PHPUnit tests with coverage
        if: matrix.coverage
        run: phpunit --colors=always --testdox --coverage-clover build/logs/phpunit/clover.xml ${{ matrix.phpunit-options }}
      - name: Run PHPUnit tests ${{ matrix.phpunit-options }}
        if: matrix.coverage == ''
        run: phpunit --colors=always --testdox
      - name: Cache PHPStan
        if: matrix.quality
        uses: actions/cache@v2
        with:
          path: .phpstan/
          key: phpstan-${{ github.sha }}
          restore-keys: phpstan-
      - name: Run PHPStan tests
        if: matrix.quality && matrix.phpstan == ''
        run: phpstan analyze
      - name: Run PHPStan tests
        if: matrix.quality && matrix.phpstan
        run: phpstan analyze -c ${{ matrix.phpstan }}
      - name: Upload report to Coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: matrix.coverage
        run: |
          composer global require --prefer-dist --no-progress --ansi php-coveralls/php-coveralls
          $HOME/.composer/vendor/bin/php-coveralls --coverage_clover=build/logs/phpunit/clover.xml -v
